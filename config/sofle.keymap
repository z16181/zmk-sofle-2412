#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        a90-left_brace {
            bindings = <&kp F12>;
            key-positions = <50 51>;
            layers = <0>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <11 12>;
            layers = <0>;
        };

        op-leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <23 24>;
            layers = <0>;
        };

        p--rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <24 25>;
            layers = <0>;
        };

        as-toSave {
            bindings = <&kp LC(S)>;
            key-positions = <27 28>;
            layers = <0>;
        };

        zx-toCancel {
            bindings = <&kp LC(Z)>;
            key-positions = <40 41>;
            layers = <0>;
        };

        xc-toCopy {
            bindings = <&kp LC(C)>;
            key-positions = <41 42>;
            layers = <0>;
        };

        cv-toPaste {
            bindings = <&kp LC(V)>;
            key-positions = <42 43>;
            layers = <0>;
        };

        df-toFind {
            bindings = <&kp LC(F)>;
            key-positions = <29 30>;
            layers = <0>;
        };

        a89-leftparenth {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <9 10>;
        };

        a90-rightparenth {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <11 10>;
        };

        atabq-grave {
            bindings = <&kp GRAVE>;
            key-positions = <13 14>;
        };
    };

    macros {
        macro_phone: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N5 &kp N0 &kp N6 &kp N3 &kp N3 &kp N5 &kp N7 &kp N6 &kp N9 &kp N5>;
            label = "NEW_MACRO";
            wait-ms = <10>;
            tap-ms = <20>;
        };

        macro_mailagent: macro_mailagent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp G &kp E &kp N &kp T &kp UNDER &kp Z &kp H &kp A &kp N &kp G &kp L &kp I &kp A &kp N &kp G &kp AT &kp N1 &kp N2 &kp N6 &kp DOT &kp C &kp O &kp M>;
            label = "MACRO_MAILAGENT";
            wait-ms = <20>;
            tap-ms = <20>;
        };

        marco_maila126: marco_mailsdnu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp N1 &kp N6 &kp N9 &kp N3 &kp N6 &kp N1 &kp AT &kp N1 &kp N2 &kp N6 &kp DOT &kp C &kp O &kp M>;
            label = "MARCO_MAILSDNU";
            wait-ms = <20>;
            tap-ms = <20>;
        };

        macro_mailsdnu: macro_mailsdnu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Z &kp H &kp A &kp N &kp G &kp L &kp I &kp A &kp N &kp G &kp N1 &kp AT &kp S &kp D &kp N &kp U &kp DOT &kp E &kp D &kp U &kp DOT &kp C &kp N>;
            label = "MACRO_MAILSDNU";
            wait-ms = <20>;
            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp MINUS
&mo 2       &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &mo 1   &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &mo 2      &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &kp PG_UP      &kp F6           &kp F7           &kp F8      &kp F9     &kp F10               &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &kp PAGE_DOWN  &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp NON_US_BACKSLASH  &kp EQUAL
&kp CLCK    &kp TILDE        &trans          &trans           &trans           &mkp MB5           &kp HOME       &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &kp END        &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &trans     &kp F11               &kp F12
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &trans         &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &macro_mailagent  &marco_maila126  &macro_mailsdnu  &macro_phone  &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans            &msc MOVE_UP     &kp F12          &kp PLUS      &kp UNDER
&trans     &out OUT_USB  &out OUT_BLE    &mkp MCLK     &mkp LCLK     &mkp RCLK       &mmv MOVE_LEFT   &trans  &msc MOVE_LEFT    &msc MOVE_DOWN   &msc MOVE_RIGHT  &kp LBRC      &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans            &sys_reset       &soft_off        &bootloader   &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans            &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
